version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@7.2.0
  snyk: snyk/snyk@1.7.2
  stackhawk: stackhawk/stackhawk@1.0.3
  node: circleci/node@4.2.0
  terraform: circleci/terraform@3.0.0
jobs:
  run_tests:
    docker:
      - image: cimg/node:14.16.0
    steps:
      - checkout
      - node/install-packages:
          override-ci-command: npm install
          cache-path: ~/project/node_modules
      - run:
          name: Run Unit Tests
          command: |
            ./node_modules/mocha/bin/mocha test/ --reporter mocha-junit-reporter --reporter-options mochaFile=./test/test-results.xml
            ./node_modules/mocha/bin/mocha test/ --reporter mochawesome --reporter-options reportDir=test-results,reportFilename=test-results
      - store_test_results:
          path: test/
      - store_artifacts:
          path: test-results          
  scan_app:
    docker:
      - image: cimg/node:14.16.0
    steps:
      - checkout
      - run:
          name: Snyk Scan Application files 
          command: npm install 
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: false
  scan_build_docker_image:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: medium
    steps:
      - checkout
      - aws-ecr/build-image:
          ecr-login: true
          region: AWS_REGION
          account-url: AWS_ECR_ACCOUNT_URL
          repo: $AWS_ECR_REPO
          tag: 0.1.<< pipeline.number >>
      - snyk/scan:
          docker-image-name: $AWS_ECR_ACCOUNT_URL/$AWS_ECR_REPO:0.1.<< pipeline.number >>
          fail-on-issues: false
          monitor-on-build: false
          severity-threshold: high
          target-file: Dockerfile
          token-variable: SNYK_TOKEN
      - aws-ecr/push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          repo: $AWS_ECR_REPO
          tag: 0.1.<< pipeline.number >>          
  terraform_destroy_aws_ecs:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Create .terraformrc file locally
          command: echo "credentials \"app.terraform.io\" {token = \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
      - terraform/install:
          terraform_version: "1.0.2"
          arch: "amd64"
          os: "linux"
      - terraform/init:
          path: ./terraform/ecs
      - terraform/plan:
          path: ./terraform/ecs
      - terraform/destroy:
          path: ./terraform/ecs
workflows:
  build:
    jobs:
      - run_tests
      - scan_app
      - scan_build_docker_image
      - stackhawk/hawkscan-local:
          requires:
            - scan_build_docker_image
          docker-network: host
          app-id: 542e74fa-5f0d-4f82-8c02-dabc9e1865f5
          steps:
            - checkout
            - aws-ecr/ecr-login
            - run:
                name: Run Stackhawk Scan
                command: |
                  docker run -d --rm -p5000:5000 $AWS_ECR_ACCOUNT_URL/$AWS_ECR_REPO:0.1.<< pipeline.number >>
      - approve_destroy:
          type: approval
      - terraform_destroy_aws_ecs:
          requires:
            - approve_destroy
